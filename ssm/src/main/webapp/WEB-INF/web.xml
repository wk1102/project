<?xml version="1.0" encoding="UTF-8"?>
<web-app>
	<display-name>Archetype Created Web Application</display-name>
	<listener>  
	      <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>  
	</listener>  
	<!-- Spring容器加载所有的配置文件的路径 -->  
	<context-param>  
	    <param-name>contextConfigLocation</param-name>  
	    <param-value>
	    	classpath:applicationContext.xml,
	        classpath:spring-mvc.xml
	    </param-value>  
	</context-param>
	 <!-- 配置SpringMVC核心控制器,将所有的请求(除了刚刚Spring MVC中的静态资源请求)都交给Spring MVC -->  
    <servlet>  
        <servlet-name>springMvc</servlet-name>  
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>  
        <init-param>  
            <param-name>contextConfigLocation</param-name>  
            <param-value>classpath*:spring-mvc.xml</param-value>  
        </init-param>  
        <!--用来标记是否在项目启动时就加在此Servlet,0或正数表示容器在应用启动时就加载这个Servlet,  
        当是一个负数时或者没有指定时，则指示容器在该servlet被选择时才加载.正数值越小启动优先值越高  -->  
        <load-on-startup>1</load-on-startup>  
    </servlet>  
    <!--为DispatcherServlet建立映射-->  
    <servlet-mapping>  
        <servlet-name>springMvc</servlet-name>  
        <!-- 拦截所有请求,千万注意是(/)而不是(/*) -->  
        <url-pattern>/</url-pattern>  
    </servlet-mapping> 
     <!-- 设置编码过滤器 -->  
    <filter>  
        <filter-name>encodingFilter</filter-name>  
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  
        <init-param>  
            <param-name>encoding</param-name>  
            <param-value>UTF-8</param-value>  
        </init-param>  
        <init-param>  
            <param-name>forceEncoding</param-name>  
            <param-value>true</param-value>  
        </init-param>  
    </filter>  
  
    <filter-mapping>  
        <filter-name>encodingFilter</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>  
    <!-- 1. 配置  Shiro 的 shiroFilter.  
		 2. DelegatingFilterProxy 实际上是 Filter 的一个代理对象. 默认情况下, Spring 会到 IOC 容器中查找和 
	<filter-name> 对应的 filter bean. 也可以通过 targetBeanName 的初始化参数来配置 filter bean 的 id. 
     -->
    <!-- <filter>
	    <filter-name>shiroFilter</filter-name>
	    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	    <init-param>
	        <param-name>targetFilterLifecycle</param-name>
	        <param-value>true</param-value>
	    </init-param>
	</filter>
	<filter-mapping>
	    <filter-name>shiroFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping> -->
</web-app>
